#include "Game.h"
#include "Player.h"
#include "LossPage.h"
#include <cmath>

extern Status<int>* score;
extern LossPage* lossPage;

Game::Game() : Scene(){}

void Game::createPage()
{
    setBackgroundPic("/images/image/Gay_Pride_Flag.png");
    Player* player = new Player();
    player->setPos(500,650 - player->boundingRect().height());
    scene->addItem(player);

    score->setTextFont();
    score->setPos(0, 0);
    score->showOnScreen();
    scene->addItem(score);

    Status<int>* health = player->getHealth();
    health->setTextFont();
    health->setPos( 0, score->boundingRect().height()+10);
    health->showOnScreen();
    scene->addItem(health);

    timerEnemies = new QTimer();
    connect(timerEnemies, SIGNAL(timeout()), this, SLOT(spawn()));
    timerEnemies->start(5000/(score->getFlag()/ 10 + 1));

    timerBuffHealth = new QTimer();
    connect(timerBuffHealth, SIGNAL(timeout()), this, SLOT(callBuffHealth()));
    timerBuffHealth->start(20000);

    detectGameOver();
}

void Game::spawn()
{

    enemy = new Enemies(0, 0.2, "/images/image/loo.png");
    scene->addItem(enemy);
    enemy->move();

    timerEnemies->stop();
    timerEnemies->start(5000/(score->getFlag()/ 10 + 1));
}

void Game::callBuffHealth()
{
    buffHealth = new BuffHealth(1, 0, 0.1, "/images/image/buffHealth.png");
    scene->addItem(buffHealth);
    buffHealth->move();

}

void Game::detectGameOver()
{
    timerGameOver = new QTimer();
    connect(timerGameOver, SIGNAL(timeout()), this, SLOT(emitGameOver()) );
    timerGameOver->start(1);
}

void Game::emitGameOver()
{
    if(score->getFlag() <=0){

        scene->clear();
        timerBuffHealth->stop();
        delete timerBuffHealth;
        timerEnemies->stop();
        delete timerEnemies;
        timerGameOver->stop();
        delete timerGameOver;
        lossPage->createPage();
    }

}





